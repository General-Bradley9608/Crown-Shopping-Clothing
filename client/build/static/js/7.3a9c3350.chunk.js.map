{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","SignInContainer","SignInTitle","h2","ButtonsBarContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUpContainer","SignUpTitle","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpContainer","SignInAndSignUpPage"],"mappings":"qMAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,29BIHtG,IAGMC,EAAoBC,YAAH,IAFL,SAQLC,EAAiBC,IAAOC,IAAV,KASdC,EAAqBF,IAAOG,MAAV,IAlBd,cAoCXN,GAIOO,EAAiBJ,IAAOK,MAAV,IAxCV,OAmDXR,GChCSS,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcF,EAAjB,EAAiBA,MAAUG,EAA3B,+CAChB,kBAACT,EAAD,KACE,kBAACG,EAAD,eAAoBO,SAAUF,GAAkBC,IAC/CH,EACC,kBAACD,EAAD,CAAgBM,UAAWF,EAAMhB,MAAMC,OAAS,SAAW,IACxDY,GAED,O,2WCfD,IAAMM,EAAkBX,IAAOC,IAAV,KAMfW,EAAcZ,IAAOa,GAAV,KAIXC,EAAsBd,IAAOC,IAAV,KCwEjBc,cAAQ,MANI,SAACC,GAAD,MAAe,CACxCC,kBAAmB,kBAAMD,EAASC,gBAClCC,iBAAkB,SAACC,EAAOC,GAAR,OAChBJ,EAASE,YAAiB,CAAEC,QAAOC,kBAGxBL,EA/DA,SAAC,GAA6C,IAA3CG,EAA0C,EAA1CA,iBAAkBD,EAAwB,EAAxBA,kBAAwB,IAChBI,mBAAS,CACjDF,MAAO,GACPC,SAAU,KAH8C,GACnDE,EADmD,KAClCC,EADkC,KAMlDJ,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAETI,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAME,iBAENT,EAAiBC,EAAOC,GAHL,2CAAH,sDAMZb,EAAe,SAACkB,GAAW,IAAD,EACNA,EAAMG,OAAtBpC,EADsB,EACtBA,MAAOqC,EADe,EACfA,KAEfN,EAAe,eAAKD,EAAN,eAAwBO,EAAOrC,MAG/C,OACE,kBAACmB,EAAD,KACE,kBAACC,EAAD,kCACA,sEAEA,0BAAMkB,SAAUN,GACd,kBAAC,EAAD,CACEK,KAAK,QACLE,KAAK,QACLxB,aAAcA,EACdf,MAAO2B,EACPd,MAAM,QACN2B,UAAQ,IAEV,kBAAC,EAAD,CACEH,KAAK,WACLE,KAAK,WACLvC,MAAO4B,EACPb,aAAcA,EACdF,MAAM,WACN2B,UAAQ,IAEV,kBAAClB,EAAD,KACE,kBAAC,IAAD,CAAciB,KAAK,UAAnB,aACA,kBAAC,IAAD,CACEA,KAAK,SACLE,QAAShB,EACTiB,gBAAc,GAHhB,6B,+NC/DH,IAAMC,EAAkBnC,IAAOC,IAAV,KAMfmC,EAAcpC,IAAOa,GAAV,KCgFTE,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCqB,YAAa,SAACf,GAAD,OAAqBN,EAASqB,YAAYf,QAG1CP,EA1EA,SAAC,GAAqB,IAAnBsB,EAAkB,EAAlBA,YAAkB,IACYhB,mBAAS,CACrDiB,YAAa,GACbnB,MAAO,GACPC,SAAU,GACVmB,gBAAiB,KALe,GAC3BjB,EAD2B,KACVkB,EADU,KAQ1BF,EAAkDhB,EAAlDgB,YAAanB,EAAqCG,EAArCH,MAAOC,EAA8BE,EAA9BF,SAAUmB,EAAoBjB,EAApBiB,gBAEhCf,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACnBD,EAAME,iBAEFP,IAAamB,EAHE,uBAIjBE,MAAM,yBAJW,0BAQnBJ,EAAY,CAAEC,cAAanB,QAAOC,aARf,2CAAH,sDAWZb,EAAe,SAACkB,GAAW,IAAD,EACNA,EAAMG,OAAtBC,EADsB,EACtBA,KAAMrC,EADgB,EAChBA,MAEdgD,EAAmB,eAAKlB,EAAN,eAAwBO,EAAOrC,MAGnD,OACE,kBAAC2C,EAAD,KACE,kBAACC,EAAD,gCACA,sEACA,0BAAM1B,UAAU,eAAeoB,SAAUN,GACvC,kBAAC,EAAD,CACEO,KAAK,OACLF,KAAK,cACLrC,MAAO8C,EACP7B,SAAUF,EACVF,MAAM,eACN2B,UAAQ,IAEV,kBAAC,EAAD,CACED,KAAK,QACLF,KAAK,QACLrC,MAAO2B,EACPV,SAAUF,EACVF,MAAM,QACN2B,UAAQ,IAEV,kBAAC,EAAD,CACED,KAAK,WACLF,KAAK,WACLrC,MAAO4B,EACPX,SAAUF,EACVF,MAAM,WACN2B,UAAQ,IAEV,kBAAC,EAAD,CACED,KAAK,WACLF,KAAK,kBACLrC,MAAO+C,EACP9B,SAAUF,EACVF,MAAM,mBACN2B,UAAQ,IAEV,kBAAC,IAAD,CAAcD,KAAK,UAAnB,gB,0VC5ED,IAAMW,EAA2B1C,IAAOC,IAAV,KCctB0C,UAPa,kBAC1B,kBAACD,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"static/js/7.3a9c3350.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled, { css } from 'styled-components';\r\n\r\nconst subColor = 'grey';\r\nconst mainColor = 'black';\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const GroupContainer = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n\r\n  input[type='password'] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus ~ label {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n\r\nexport const FormInputLabel = styled.label`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n\r\n  &.shrink {\r\n    ${shrinkLabelStyles}\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\n// import './form-input.styles.scss';\r\n\r\nimport {\r\n  GroupContainer,\r\n  FormInputContainer,\r\n  FormInputLabel,\r\n} from './form-input.styles';\r\n\r\nconst FormInput = ({ handleChange, label, ...props }) => (\r\n  <GroupContainer>\r\n    <FormInputContainer onChange={handleChange} {...props} />\r\n    {label ? (\r\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\r\n        {label}\r\n      </FormInputLabel>\r\n    ) : null}\r\n  </GroupContainer>\r\n);\r\n\r\nexport default FormInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInContainer = styled.div`\r\n  width: 380px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const SignInTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const ButtonsBarContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from '../../redux/user/user.actions';\r\n\r\n// import './sign-in.styles.scss';\r\n\r\nimport {\r\n  SignInContainer,\r\n  SignInTitle,\r\n  ButtonsBarContainer,\r\n} from './sign-in.styles';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = userCredentials;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <SignInTitle>I already have an account</SignInTitle>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          handleChange={handleChange}\r\n          value={email}\r\n          label='Email'\r\n          required\r\n        />\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          value={password}\r\n          handleChange={handleChange}\r\n          label='Password'\r\n          required\r\n        />\r\n        <ButtonsBarContainer>\r\n          <CustomButton type='submit'> Sign in </CustomButton>\r\n          <CustomButton\r\n            type='button'\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn\r\n          >\r\n            Sign in with Google\r\n          </CustomButton>\r\n        </ButtonsBarContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n","import styled from 'styled-components';\r\n\r\nexport const SignUpContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n`;\r\n\r\nexport const SignUpTitle = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n// import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\n// import './sign-up.styles.scss';\r\n\r\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    signUpStart({ displayName, email, password });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have a account</SignUpTitle>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label='Display Name'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          onChange={handleChange}\r\n          label='Email'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={handleChange}\r\n          label='Password'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n          onChange={handleChange}\r\n          label='Confirm Password'\r\n          required\r\n        />\r\n        <CustomButton type='submit'>SIGN UP</CustomButton>\r\n      </form>\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n","import styled from 'styled-components';\r\n\r\nexport const SignInAndSignUpContainer = styled.div`\r\n  width: 850px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    flex-direction: column;\r\n    width: unset;\r\n    align-items: center;\r\n\r\n    > *:first-child {\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\n// import './sign-in-and-sign-up.styles.scss';\r\n\r\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.styles';\r\n\r\nconst SignInAndSignUpPage = () => (\r\n  <SignInAndSignUpContainer>\r\n    <SignIn />\r\n    <SignUp />\r\n  </SignInAndSignUpContainer>\r\n);\r\n\r\nexport default SignInAndSignUpPage;\r\n"],"sourceRoot":""}