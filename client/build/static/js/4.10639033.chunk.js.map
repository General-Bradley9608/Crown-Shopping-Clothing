{"version":3,"sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["StripeCheckoutButton","price","priceForStripe","label","name","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","imageUrl","quantity","src","alt","onClick","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","key","id"],"mappings":"mMA8CeA,EA1Cc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxBC,EAAyB,IAARD,EAyBvB,OACE,kBAAC,IAAD,CACEE,MAAM,UACNC,KAAK,gBACLC,gBAAc,EACdC,iBAAe,EACfC,MAAM,kDACNC,YAAW,yBAAoBP,GAC/BQ,OAAQP,EACRQ,WAAW,WACXC,MAhCY,SAACA,GAGfC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQP,EACRS,MAAOA,KAGRK,MAAK,SAACC,GACLC,MAAM,0BAEPC,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACE,+FAgBJK,UAnCmB,gD,g9BCJlB,IAAMC,EAAwBC,IAAOC,IAAV,KAiBrBC,EAAiBF,IAAOC,IAAV,KAUdE,EAAgBH,IAAOI,KAAV,KAQbC,EAAoBL,YAAOG,EAAPH,CAAH,KAYjBM,EAAwBN,IAAOC,IAAV,KCHnBM,cAAQ,MANI,SAACC,GAAD,MAAe,CACxCC,UAAW,SAACC,GAAD,OAAUF,EAASG,YAAkBD,KAChDE,QAAS,SAACF,GAAD,OAAUF,EAASI,YAAQF,KACpCG,WAAY,SAACH,GAAD,OAAUF,EAASK,YAAWH,QAG7BH,EA3BM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWG,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5ClC,EAAoCmC,EAApCnC,KAAMoC,EAA8BD,EAA9BC,SAAUvC,EAAoBsC,EAApBtC,MAAOwC,EAAaF,EAAbE,SAC/B,OACE,kBAACjB,EAAD,KACE,kBAACG,EAAD,KACE,yBAAKe,IAAKF,EAAUG,IAAI,UAE1B,kBAACf,EAAD,KAAgBxB,GAChB,kBAAC0B,EAAD,KACE,yBAAKc,QAAS,kBAAMN,EAAWC,KAA/B,UACA,8BAAOE,GACP,yBAAKG,QAAS,kBAAMP,EAAQE,KAA5B,WAEF,kBAACX,EAAD,KAAgB3B,GAChB,kBAAC8B,EAAD,CAAuBa,QAAS,kBAAMV,EAAUK,KAAhD,c,8wCC/BC,IAAMM,EAAwBpB,IAAOC,IAAV,KAkBrBoB,EAA0BrB,IAAOC,IAAV,KAQvBqB,EAAuBtB,IAAOC,IAAV,KAoBpBsB,EAAiBvB,IAAOC,IAAV,KAUduB,EAAmBxB,IAAOC,IAAV,KCJvBwB,EAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,MAGMvB,sBAAQkB,EAARlB,EArCM,SAAC,GAAD,IAAGoB,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACnB,kBAACT,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,0CAEF,kBAACA,EAAD,KACE,8CAEF,kBAACA,EAAD,KACE,2CAEF,kBAACA,EAAD,KACE,wCAEF,kBAACA,EAAD,KACE,0CAGHK,EAAUI,KAAI,SAACjB,GAAD,OACb,kBAAC,EAAD,CAAckB,IAAKlB,EAASmB,GAAInB,SAAUA,OAE5C,kBAACS,EAAD,gBAAyBM,GACzB,kBAACL,EAAD,gEAEE,6BAFF,+CAKA,kBAAC,EAAD,CAAsBhD,MAAOqD","file":"static/js/4.10639033.chunk.js","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = 'pk_test_nWzAmDcLKWluX96MMjNoVsE700qPMjrNOf';\r\n\r\n  const onToken = (token) => {\r\n    // console.log(token);\r\n    // alert('Payment Successful!');\r\n    axios({\r\n      url: 'payment',\r\n      method: 'post',\r\n      data: {\r\n        amount: priceForStripe,\r\n        token: token,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        alert('Payment Successful!');\r\n      })\r\n      .catch((error) => {\r\n        console.log('Payment error: ', error);\r\n        alert(\r\n          'There was an issue with the payment. Please make sure you use the provided credit card!'\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      label='Pay Now'\r\n      name='Crwn Clothing'\r\n      billingAddress\r\n      shippingAddress\r\n      image='https://crwn-clothing.ochanissi.com/logo192.png'\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel='Pay Now!'\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n\r\n    text-align: center;\r\n    // justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  clearItemFromCart,\r\n  addItem,\r\n  removeItem,\r\n} from '../../redux/cart/cart.actions';\r\n\r\n// import './checkout-item.styles.scss';\r\n\r\nimport {\r\n  CheckoutItemContainer,\r\n  ImageContainer,\r\n  TextContainer,\r\n  QuantityContainer,\r\n  RemoveButtonContainer,\r\n} from './checkout-item.styles';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\r\n  const { name, imageUrl, price, quantity } = cartItem;\r\n  return (\r\n    <CheckoutItemContainer>\r\n      <ImageContainer>\r\n        <img src={imageUrl} alt='item' />\r\n      </ImageContainer>\r\n      <TextContainer>{name}</TextContainer>\r\n      <QuantityContainer>\r\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n        <span>{quantity}</span>\r\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\r\n      </QuantityContainer>\r\n      <TextContainer>{price}</TextContainer>\r\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n        &#10005;\r\n      </RemoveButtonContainer>\r\n    </CheckoutItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearItem: (item) => dispatch(clearItemFromCart(item)),\r\n  addItem: (item) => dispatch(addItem(item)),\r\n  removeItem: (item) => dispatch(removeItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: auto;\r\n\r\n    &:last-child {\r\n      width: auto;\r\n    }\r\n\r\n    display: grid;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component';\r\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from '../../redux/cart/cart.selectors';\r\n\r\n// import './checkout.styles.scss';\r\n\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  WarningContainer,\r\n} from './checkout.styles';\r\n\r\nconst CheckoutPage = ({ cartItems, total }) => (\r\n  <CheckoutPageContainer>\r\n    <CheckoutHeaderContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Product</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Description</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Quantity</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Price</span>\r\n      </HeaderBlockContainer>\r\n      <HeaderBlockContainer>\r\n        <span>Remove</span>\r\n      </HeaderBlockContainer>\r\n    </CheckoutHeaderContainer>\r\n    {cartItems.map((cartItem) => (\r\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n    ))}\r\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\r\n    <WarningContainer>\r\n      *Please use the following test credit card for payments*\r\n      <br />\r\n      4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\r\n    </WarningContainer>\r\n    <StripeCheckoutButton price={total} />\r\n  </CheckoutPageContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  total: selectCartTotal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n"],"sourceRoot":""}