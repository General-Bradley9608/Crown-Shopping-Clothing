{"version":3,"sources":["redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","pages/shop/shop.component.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","className","onClick","inverted","CollectionPreviewContainer","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","push","path","toUpperCase","filter","idx","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","otherCollectionProps","compose","CollectionsOverview","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","ownProps","collection","collectionUrlParam","params","collectionId","CollectionPage","fetchCollectionsStart","useEffect","exact","component"],"mappings":"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","file":"static/js/6.50e4c2fc.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);\r\n","import React from 'react';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  // width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  // width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// import CustomButton from '../custom-button/custom-button.component';\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\n// import './collection-item.styles.scss';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  CollectionFooterContainer,\r\n  NameContainer,\r\n  PriceContainer,\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>${price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\n\r\n// import './collection-preview.styles.scss';\r\n\r\nimport {\r\n  CollectionPreviewContainer,\r\n  TitleContainer,\r\n  PreviewContainer,\r\n} from './collection-preview.styles';\r\n\r\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\r\n  <CollectionPreviewContainer>\r\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\r\n      {title.toUpperCase()}\r\n    </TitleContainer>\r\n    <PreviewContainer>\r\n      {items\r\n        .filter((item, idx) => idx < 4)\r\n        .map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n    </PreviewContainer>\r\n  </CollectionPreviewContainer>\r\n);\r\n\r\nexport default withRouter(CollectionPreview);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\n\r\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\r\n\r\n// import './collections-overview.styles.scss';\r\n\r\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\r\n\r\nconst CollectionsOverview = ({ collections }) => (\r\n  <CollectionsOverviewContainer>\r\n    {collections.map(({ id, ...otherCollectionProps }) => (\r\n      <CollectionPreview key={id} {...otherCollectionProps} />\r\n    ))}\r\n  </CollectionsOverviewContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectCollectionsForPreview,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collections-overview.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionFetching\r\n});\r\n\r\nconst CollectionsOverviewContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n\r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selectors';\r\n\r\n// import './collection.styles.scss';\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer,\r\n} from './collection.styles';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPageContainer from '../collection/collection.container';\r\n\r\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n\r\n  return (\r\n    <div className='shop-page'>\r\n      <Route\r\n        exact\r\n        path={`${match.path}`}\r\n        component={CollectionsOverviewContainer}\r\n      />\r\n      <Route\r\n        path={`${match.path}/:collectionId`}\r\n        component={CollectionPageContainer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"],"sourceRoot":""}